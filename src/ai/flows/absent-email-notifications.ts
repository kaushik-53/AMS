// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Implements a Genkit flow to send automated email notifications to parents/guardians when a student is marked absent.
 *
 * - `sendAbsentEmailNotification` -  A function that sends an email notification when a student is absent.
 * - `AbsentEmailNotificationInput` - The input type for the sendAbsentEmailNotification function.
 * - `AbsentEmailNotificationOutput` - The return type for the sendAbsentEmailNotification function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AbsentEmailNotificationInputSchema = z.object({
  studentName: z.string().describe('The name of the student who is absent.'),
  parentEmail: z.string().email().describe('The email address of the parent or guardian.'),
  absenceDate: z.string().describe('The date the student was absent (e.g., YYYY-MM-DD).'),
  className: z.string().describe('The class name for which the student was absent.'),
});
export type AbsentEmailNotificationInput = z.infer<typeof AbsentEmailNotificationInputSchema>;

const AbsentEmailNotificationOutputSchema = z.object({
  success: z.boolean().describe('Whether the email notification was sent successfully.'),
  message: z.string().describe('A message indicating the status of the email sending.'),
});
export type AbsentEmailNotificationOutput = z.infer<typeof AbsentEmailNotificationOutputSchema>;

export async function sendAbsentEmailNotification(
  input: AbsentEmailNotificationInput
): Promise<AbsentEmailNotificationOutput> {
  return absentEmailNotificationFlow(input);
}

const absentEmailPrompt = ai.definePrompt({
  name: 'absentEmailPrompt',
  input: {schema: AbsentEmailNotificationInputSchema},
  output: {schema: AbsentEmailNotificationOutputSchema},
  prompt: `Subject: Absence Notification for {{studentName}}

Dear Parent/Guardian,

This is to inform you that {{studentName}} was marked absent from {{className}} on {{absenceDate}}.

Please ensure that you provide a valid reason for the absence.

Thank you for your attention to this matter.

Sincerely,
[School Name] Administration`,
});

const absentEmailNotificationFlow = ai.defineFlow(
  {
    name: 'absentEmailNotificationFlow',
    inputSchema: AbsentEmailNotificationInputSchema,
    outputSchema: AbsentEmailNotificationOutputSchema,
  },
  async input => {
    // Here you would integrate with an email sending service like SendGrid, Nodemailer, etc.
    // For this example, we'll simulate sending an email and return a success status.
    try {
      // Simulate sending email
      console.log(
        `Sending email to ${input.parentEmail} about ${input.studentName}'s absence on ${input.absenceDate}`
      );
      // In a real application, you would call your email service here.
      // await sendEmail(input.parentEmail, absentEmailPrompt);

      const {output} = await absentEmailPrompt(input);
      return {
        success: true,
        message: `Email sent successfully to ${input.parentEmail} about ${input.studentName}'s absence on ${input.absenceDate}.`,        
      };
    } catch (error: any) {
      console.error('Failed to send email:', error);
      return {
        success: false,
        message: `Failed to send email to ${input.parentEmail}. Error: ${error.message}`,
      };
    }
  }
);
